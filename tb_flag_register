`timescale 1 ns/10 ps

module tb_fr();
	//Signals
	localparam	M = 8;
	
	reg							clk_tb;
	reg 							rst_tb;
	reg							enaf_tb;
	reg	[M-1:0]				dataa_tb;
	reg							carry_tb;
	wire							carry_f_tb, neg_f_tb, par_f_tb, zero_f_tb;
	
	//Instantiate DUT
	flag_register #(.M(8)) DUT (
		.clk(clk_tb),
		.rst(rst_tb),
		.dataa(dataa_tb),
		.enaf(enaf_tb),
		.carry(carry_tb),
		.C(carry_f_tb),
		.N(neg_f_tb),
		.P(par_f_tb),
		.Z(zero_f_tb)
	);
	
	//Clock generation
	initial	clk_tb = 0;
	always	#50	clk_tb = ~clk_tb;
	
	//Test signal generator
	initial
	begin
		
		//test vector 0000
		rst_tb 	= 1'b0;
		dataa_tb = 8'b00000000;
		carry_tb = 1'b0;
		enaf_tb 	= 1'b0;	
		# 250;
		
		//test vector 0001
		dataa_tb = 8'b00000000;
		carry_tb = 1'b0;
		enaf_tb 	= 1'b1;	
		# 200;
		
		//test vector 0010
		dataa_tb = 8'b00000000;
		carry_tb = 1'b1;
		enaf_tb 	= 1'b1;	
		# 200;
		
		//test vector 0011
		dataa_tb = 8'b01100100;
		carry_tb = 1'b0;
		enaf_tb 	= 1'b0;	
		# 150;
		
		//test vector 0100
		dataa_tb = 8'b01100100;
		carry_tb = 1'b1;
		enaf_tb 	= 1'b1;	
		# 200;
		
		//test vector 0101
		dataa_tb = 8'b10010101;
		carry_tb = 1'b0;
		enaf_tb 	= 1'b1;	
		# 200;
		
		//test vector 0110
		dataa_tb = 8'b10010101;
		carry_tb = 1'b1;
		enaf_tb 	= 1'b1;	
		# 200;
		
		//test vector 0111
		dataa_tb = 8'b00110101;
		carry_tb = 1'b0;
		enaf_tb 	= 1'b1;	
		# 200;
		
		//test vector 1000
		dataa_tb = 8'b00111010;
		carry_tb = 1'b0;
		enaf_tb 	= 1'b1;	
		# 200;
		
		
		
		//stop simulation
		$stop;
	end
endmodule

